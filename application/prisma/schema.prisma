// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ---Modelはここから下に追加していく---
// 注： 開発時にmodelを更新したら、ローカルでもコンテナ内でもmake generate & make migrateする
// そうしないと、ローカルのprisma clientが最新のmodelを認識しないため、linterがエラーを出してしまう

model Examinee {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  password  String
  createdAt DateTime @map("created_at")
  updatedAt DateTime @map("updated_at")

  ExamAttempt ExamAttempt[]

  @@map("examinees")
}

model ExamAttempt {
  id            Int       @id @default(autoincrement())
  examineeId    Int       @map("examinee_id")
  examId        Int       @map("exam_id")
  examStartDate DateTime? @map("exam_start_date")
  examEndDate   DateTime? @map("exam_end_date")
  createdAt     DateTime  @map("created_at")
  updatedAt     DateTime  @map("updated_at")

  exam           Exam             @relation(fields: [examId], references: [id])
  examinee       Examinee         @relation(fields: [examineeId], references: [id])
  ExamineeAnswer ExamineeAnswer[]

  @@map("exam_attempts")
}

model Exam {
  id        Int       @id @default(autoincrement())
  title     String
  timeLimit Int       @map("time_limit")
  deletedAt DateTime? @map("deleted_at")
  createdAt DateTime  @map("created_at")
  updatedAt DateTime  @map("updated_at")

  examQuestions ExamQuestion[]
  examAttempts  ExamAttempt[]

  @@map("exams")
}

model ExamQuestion {
  id            Int       @id @default(autoincrement())
  number        Int
  question      String
  type          Int
  option        Json?
  correctAnswer Json?     @map("collect_answer")
  jsonVersion   Int       @map("json_version")
  examId        Int?      @map("exam_id")
  deletedAt     DateTime? @map("deleted_at")
  createdAt     DateTime  @map("created_at")
  updatedAt     DateTime  @map("updated_at")

  exam            Exam?            @relation(fields: [examId], references: [id])
  examineeAnswers ExamineeAnswer[]

  @@map("exam_questions")
}

model ExamineeAnswer {
  id             Int      @id @default(autoincrement())
  examQuestionId Int      @map("exam_question_id")
  examAttemptId  Int      @map("exam_attempt_id")
  answer         Json?
  isMarked       Boolean  @map("is_marked")
  createdAt      DateTime @map("created_at")
  updatedAt      DateTime @map("updated_at")

  examQuestion ExamQuestion @relation(fields: [examQuestionId], references: [id])
  examAttempt  ExamAttempt  @relation(fields: [examAttemptId], references: [id])

  @@map("examinee_answers")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Modelはここから下に追加していく
// 注： 開発時、modelを更新したら、ローカルでもコンテナ内でもmake generate & make migrateする

model Examinee {
  id                        Int      @id @default(autoincrement())
  name                      String
  email                     String
  password                  String
  examId                    Int      @map("exam_id")
  examPeriodStartDate       DateTime @map("exam_period_start_date")
  examPeriodEndDate         DateTime @map("exam_period_end_date")
  examStartDate             DateTime? @map("exam_start_date")
  examEndDate               DateTime? @map("exam_end_date")
  exam                      Exam     @relation(fields: [examId], references: [id])
  examAnswers               ExamineeAnswer[]
  createdAt                 DateTime @map("created_at")
  updatedAt                 DateTime @map("updated_at")

  @@map("examinees")
}

model Exam {
  id                        Int      @id @default(autoincrement())
  title                     String
  timeLimit                 Int      @map("time_limit")
  examinees                 Examinee[]
  examQuestions             ExamQuestion[]
  deletedAt                 DateTime? @map("deleted_at")
  createdAt                 DateTime @map("created_at")
  updatedAt                 DateTime @map("updated_at")

  @@map("exams")
}

model ExamQuestion {
  id                        Int      @id @default(autoincrement())
  question                  String
  type                      Int
  option                    Json?
  correctAnswer             Json?      @map("collect_answer")
  jsonVersion               Int       @map("json_version")
  examId                    Int?       @map("exam_id")
  exam                      Exam?      @relation(fields: [examId], references: [id])
  examineeAnswers               ExamineeAnswer[]
  deletedAt                 DateTime?  @map("deleted_at")
  createdAt                 DateTime  @map("created_at")
  updatedAt                 DateTime  @map("updated_at")

  @@map("exam_questions")
}

model ExamineeAnswer {
  id                        Int      @id @default(autoincrement())
  examineeId                Int      @map("examinee_id")
  examQuestionId            Int      @map("exam_question_id")
  answer                    Json?
  isMarked                  Boolean   @map("is_marked")
  examinee                  Examinee  @relation(fields: [examineeId], references: [id])
  examQuestion              ExamQuestion  @relation(fields: [examQuestionId], references: [id])
  createdAt                 DateTime  @map("created_at")
  updatedAt                 DateTime  @map("updated_at")

  @@map("examinee_answers")
}
